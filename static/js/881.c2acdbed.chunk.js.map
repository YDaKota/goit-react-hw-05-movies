{"version":3,"file":"static/js/881.c2acdbed.chunk.js","mappings":"6PACA,GAAgB,UAAY,0BAA0B,WAAa,2BAA2B,kBAAoB,kCAAkC,iBAAmB,iCAAiC,WAAa,2BAA2B,WAAa,2BAA2B,KAAO,sB,SCIlRA,EAAS,WAAO,IAAD,EACxB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOM,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAU,UAAGN,EAAaO,IAAI,iBAApB,QAAiC,IAEjDC,EAAAA,EAAAA,YAAU,WAAM,wCAIZ,gHAEkCC,EAAAA,EAAAA,IAAaH,GAF/C,iBAEgBI,EAFhB,EAEgBA,SACIC,OAAS,GACjBC,MAAM,oBAENd,EAAUY,GANtB,gDAQYG,QAAQC,IAAR,MARZ,0DAJY,sBACPR,GADO,mCAcZS,EACH,GAAE,CAACT,IAEJ,IAAMU,EAAW,SAAAC,GACRf,GACHU,MAAM,6BAERK,EAAEC,iBACFjB,EAA0B,KAAVC,EAAe,CAAEiB,OAAQjB,GAAU,CAAC,GACpDC,EAAS,GACV,EAMD,OAAKN,GAMH,4BACI,kBAAMmB,SAAUA,EAAUI,UAAWC,EAAAA,UAArC,WACI,gBAAKD,UAAWC,EAAAA,WAAhB,UACI,kBACIC,KAAK,OACLF,UAAWC,EAAAA,iBACXE,MAAOrB,EACPsB,SAAU,SAAAP,GAAC,OAjBPM,EAiByBN,EAAEQ,cAAcF,MAAMG,mBAhBnEvB,EAASoB,GADW,IAAAA,CAiBO,OAGnB,mBAAQD,KAAK,SAASK,QAASX,EAAUI,UAAWC,EAAAA,kBAApD,uBAEHxB,IACG,eAAIuB,UAAWC,EAAAA,WAAf,SACCxB,EAAO+B,KAAI,SAAAC,GACR,IAAIC,EAAU,0CAAsCD,EAAME,aAE1D,OACA,UAAC,KAAD,CAEIC,GAAE,UAAKH,EAAMI,IACbC,MAAO,CAAEC,KAAM/B,GACfgB,UAAWC,EAAAA,KAJf,WAMI,gBAAKe,IAAKN,EAAYO,MAAM,QAAQC,IAAKT,EAAMU,SAC/C,eAAInB,UAAWC,EAAAA,WAAf,SAAmCQ,EAAMU,UANpCV,EAAMI,GASlB,SAjCF,IAwCd,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Movies_Searchbar__485Hv\",\"SearchForm\":\"Movies_SearchForm__EKSZc\",\"SearchForm_button\":\"Movies_SearchForm_button__gq07l\",\"SearchForm_input\":\"Movies_SearchForm_input__ye37+\",\"MovieItems\":\"Movies_MovieItems__KPo7W\",\"MovieTitle\":\"Movies_MovieTitle__8Df93\",\"Link\":\"Movies_Link__4PD7w\"};","import { useState, useEffect } from 'react';\nimport { searchMovies } from '../../services/api';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport styles from './Movies.module.css';\n\nexport const Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [input, setInput] = useState('');\n    const location = useLocation();\n    const inputParam = searchParams.get('filter') ?? '';\n    \n    useEffect(() => {\n        if (!inputParam) {\n            return;\n        }\n        async function searchOFMovies() {\n            try {\n                const { results } = await searchMovies(inputParam);\n                if (results.length < 1) {\n                    alert('No results found');\n                    }\n                    setMovies(results);\n                } catch (error) {\n                    console.log(error);\n                }}\n        searchOFMovies();\n    }, [inputParam]);\n\n    const onSubmit = e => {\n        if (!input) {\n          alert('Please enter a movie name');\n        }\n        e.preventDefault();\n        setSearchParams(input !== '' ? { filter: input } : {});\n        setInput('');\n      };\n\n      const onChangeInput = value => {\n        setInput(value);\n      };\n    \n      if (!movies) {\n        return null;\n      }\n\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className={styles.SearchBar}>\n                <div className={styles.SearchForm}>\n                    <input\n                        type=\"text\"\n                        className={styles.SearchForm_input}\n                        value={input}\n                        onChange={e => onChangeInput(e.currentTarget.value.toLowerCase())}\n                    />\n                </div>\n                <button type=\"submit\" onClick={onSubmit} className={styles.SearchForm_button}>Search</button>\n            </form>\n            {movies && (\n                <ul className={styles.MovieItems}>\n                {movies.map(movie => {\n                    let posterPath = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n                    \n                    return (\n                    <Link\n                        key={movie.id}\n                        to={`${movie.id}`}\n                        state={{ from: location }}\n                        className={styles.Link}\n                    >\n                        <img src={posterPath} width='400px' alt={movie.title} />\n                        <h3 className={styles.MovieTitle}>{movie.title}</h3>\n                    </Link>\n                    );\n                })}\n                </ul>\n\n                \n            )}\n        </div>\n    );\n}"],"names":["Movies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","input","setInput","location","useLocation","inputParam","get","useEffect","searchMovies","results","length","alert","console","log","searchOFMovies","onSubmit","e","preventDefault","filter","className","styles","type","value","onChange","currentTarget","toLowerCase","onClick","map","movie","posterPath","poster_path","to","id","state","from","src","width","alt","title"],"sourceRoot":""}