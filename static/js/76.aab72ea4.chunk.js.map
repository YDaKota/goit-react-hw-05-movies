{"version":3,"file":"static/js/76.aab72ea4.chunk.js","mappings":"sNACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAwF,wB,SCK3EA,EAAO,WAChB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BH,EAAAA,EAAAA,YAA5B,eAAOK,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACNL,GAAW,IACXM,EAAAA,EAAAA,IAAgBC,OAAON,IACpBO,MAAK,SAAAC,GACAL,EAAUK,EAAIC,MACdV,GAAW,EACd,IACFW,OAAM,SAAAC,GACDC,QAAQC,IAAIF,GACZZ,GAAW,EACd,GACR,GAAE,CAACC,IAEAF,GACO,wCAENI,GAOD,8BACKJ,GACG,wCAEA,+BACI,eAAIgB,UAAWC,EAAf,SACKb,EAAOc,KAAI,SAAAC,GAAK,OACb,gBAAmBH,UAAWC,EAA9B,WACI,gBAAKG,IAAG,0CAAqCD,EAAME,cAAgBC,MAAM,MAAMC,OAAO,MAAMC,IAAKL,EAAMM,QACvG,cAAGT,UAAWC,EAAd,SAAiCE,EAAMM,SAFlCN,EAAMO,GADF,WAZ1B,4CAuBd,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__9bpv2\",\"CastItem\":\"Cast_CastItem__0IPWJ\",\"ActorName\":\"Cast_ActorName__93D+n\"};","import { getMovieCredits } from '../../services/api.jsx';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from './Cast.module.css';\n\n\nexport const Cast = () => {\n    const [loading, setLoading] = useState(false);\n    const { movieId } = useParams();\n    const [actors, setActors] = useState();\n\n    useEffect(() => {\n        setLoading(true);\n        getMovieCredits(Number(movieId))\n          .then(res => {\n                setActors(res.cast);\n                setLoading(false);\n            })\n          .catch(err => {\n                console.log(err);\n                setLoading(false);\n            });\n    }, [movieId]);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n    if (!actors) {\n        return <div>No actors found</div>;\n    }\n\n    // const { cast } = actors;\n\n    return (\n        <>\n            {loading? (\n                <h1>Loading...</h1>\n            ) : (\n                <>\n                    <ul className={styles.Cast}>\n                        {actors.map(actor => (\n                            <li key={actor.id} className={styles.CastItem}>\n                                <img src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`} width=\"200\" height=\"300\" alt={actor.name} />\n                                <p className={styles.ActorName}>{actor.name}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </>\n            )}\n        </>\n    );\n}\n"],"names":["Cast","useState","loading","setLoading","movieId","useParams","actors","setActors","useEffect","getMovieCredits","Number","then","res","cast","catch","err","console","log","className","styles","map","actor","src","profile_path","width","height","alt","name","id"],"sourceRoot":""}